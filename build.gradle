buildscript {
    ext.kotlin_version = "1.4.21"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.8"
    id "org.beryx.jlink" version "2.4.0"
}

apply plugin: "kotlin"

repositories {
    mavenCentral()
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
    flatDir {
        dirs "libs"
    }
}

defaultTasks "run"

compileJava.destinationDir = compileKotlin.destinationDir

application {
    mainClassName = "midituutti/midituutti.MidiTuuttiKt"
}

test {
    moduleOptions {
        runOnClasspath = true
    }
}

run {
    doFirst {
        jvmArgs = [
                "--module-path", classpath.asPath,
                "--add-modules=javafx.base,javafx.controls,javafx.graphics"
        ]
    }
}

javafx {
    version = "11.0.2"
    modules = ["javafx.controls", "javafx.graphics", "javafx.fxml", "javafx.media", "javafx.swing", "javafx.web"]
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"

    compile("no.tornado:tornadofx:2.0.0-SNAPSHOT") {
        exclude group: "org.jetbrains.kotlin"
    }
    // Tornado depends on these. Let's make sure they have the same version as our kotlin.
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile ":java-midi-decoder:0.3.1"

    testCompile "junit:junit:4.11"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

wrapper {
    gradleVersion = "5.6.4"
}

jlink {
    launcher {
        name = "midi-tuutti"
    }
    addExtraDependencies("javafx")
    forceMerge("java-midi-decoder")
    OperatingSystem os = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem;
    if (os.isLinux()) {
        imageZip.set(project.file("${project.buildDir}/image-zip/midi-tuutti-linux.zip"))
    } else if (os.isWindows()) {
        imageZip.set(project.file("${project.buildDir}/image-zip/midi-tuutti-windows.zip"))
    } else if (os.isMacOsX()) {
        imageZip.set(project.file("${project.buildDir}/image-zip/midi-tuutti-macos.zip"))
    } else {
        throw new RuntimeException("Unsupported operating system")
    }
    forceMerge("kotlin")
}
